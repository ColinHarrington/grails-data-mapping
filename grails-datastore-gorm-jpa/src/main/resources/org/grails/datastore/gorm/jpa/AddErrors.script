import org.codehaus.groovy.grails.compiler.injection.ASTErrorsHelper;
import org.codehaus.groovy.grails.compiler.injection.ASTValidationErrorsHelper;
import javax.persistence.Transient;
import org.codehaus.groovy.ast.ClassNode;
import org.codehaus.groovy.ast.FieldNode;
import org.codehaus.groovy.ast.AnnotatedNode;
import org.codehaus.groovy.ast.AnnotationNode;
import org.codehaus.groovy.ast.ASTNode;
import org.codehaus.groovy.ast.expr.ConstantExpression;
import java.lang.reflect.Modifier
import org.springframework.validation.Errors

def errorsHelper = new ASTValidationErrorsHelper() {
    protected void addErrorsField(ClassNode paramTypeClassNode) {
        final ASTNode errorsField = paramTypeClassNode.getField("errors")
        if (errorsField == null) {
            FieldNode field = new FieldNode("errors", Modifier.PUBLIC,
                    new ClassNode(Errors.class), paramTypeClassNode, new ConstantExpression(null));

            field.addAnnotation(new AnnotationNode(new ClassNode(Transient.class)));
            paramTypeClassNode.addField(field);
        }
    }
};
errorsHelper.injectErrorsCode(classNode);
